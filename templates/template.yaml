# use this database to generate a "Makefile.gen"
#
# variables you can use:
# $(O) -- the output folder
# $(T) -- the template folder of the tool
# $(DB) -- the database to use
---
databaseSchema: "database.yaml.schema"
templateSetName: "someName"
    # plugin for your custom addional tasks. maybe database conversion or
    # verification? could also plugin template-file results from this
    # very template-set.
extraMakefileIncludes:
    - "Makefile.yamlFromScratch"
    - "Makefile.extraInfo"

templates:
    # the keys are also targets in the generated makefile
    - name: "cpp"
        # this file is searched for in $(T)
      templateFilename: "test.cpp.template"
        # and this put relative to $(O)
      outFilename: "test.cpp"
    - name: "somefile"
      templateFilename: "some.file.template"
        # better: give outputDir explitly? this way the mkdir-calls
        # can be reduced. maybe also strip '.template' ending
        # automatically?
      outFilename: "dir/some.file"
    - name: "cmake"
      templateFilename: "CMakeLists.txt.template"
      outFilename: "CMakeLists.txt"
      # additional variables can be inserted into the template
      extraVariable: "projectName=testproject"
...
